# testdata/test2016202.ewe
start:
	zero := 0
	a := 0
	b := 0
	c := 0
	memory := 0
	d := 0
	operator2 := 0
	one := 1
	operator1 := 0
	sp := 1010
# Push(3)
	sp := sp - one
	operator1 := 3
	M[sp + 0] := operator1
# Push(4)
	sp := sp - one
	operator1 := 4
	M[sp + 0] := operator1
# Add
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 + operator2
	sp := sp + one
	M[sp + 0] := operator1
# Assign
	a := M[sp + 0]
# Write
	operator1 := M[sp + 0]
	sp := sp + one
	writeInt(operator1)
# Recall
	sp := sp - one
	M[sp + 0] := memory
# Clear
	memory := zero
	sp := sp - one
	M[sp + 0] := memory
# Add
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 + operator2
	sp := sp + one
	M[sp + 0] := operator1
# Assign
	b := M[sp + 0]
# Write
	operator1 := M[sp + 0]
	sp := sp + one
	writeInt(operator1)
# Push(3)
	sp := sp - one
	operator1 := 3
	M[sp + 0] := operator1
# Push(4)
	sp := sp - one
	operator1 := 4
	M[sp + 0] := operator1
# Add
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 + operator2
	sp := sp + one
	M[sp + 0] := operator1
# Store
	memory := M[sp + 0]
# Push(9)
	sp := sp - one
	operator1 := 9
	M[sp + 0] := operator1
# Add
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 + operator2
	sp := sp + one
	M[sp + 0] := operator1
# Assign
	c := M[sp + 0]
# Write
	operator1 := M[sp + 0]
	sp := sp + one
	writeInt(operator1)
# Identifier
	sp := sp - one
	operator1 := a
	M[sp + 0] := operator1
# Push(1)
	sp := sp - one
	operator1 := 1
	M[sp + 0] := operator1
# Module
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 % operator2
	sp := sp + one
	M[sp + 0] := operator1
# Identifier
	sp := sp - one
	operator1 := b
	M[sp + 0] := operator1
# Push(2)
	sp := sp - one
	operator1 := 2
	M[sp + 0] := operator1
# Module
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 % operator2
	sp := sp + one
	M[sp + 0] := operator1
# Add
	operator2 := M[sp + 0]
	operator1 := M[sp + 1]
	operator1 := operator1 + operator2
	sp := sp + one
	M[sp + 0] := operator1
# Assign
	d := M[sp + 0]
# Write
	operator1 := M[sp + 0]
	sp := sp + one
	writeInt(operator1)
end:	halt
# Variables
equ zero	M[0]
equ a	M[1]
equ b	M[2]
equ c	M[3]
equ memory	M[4]
equ d	M[5]
equ operator2	M[6]
equ one	M[7]
equ operator1	M[8]
equ sp	M[9]
equ stack	M[1010]
